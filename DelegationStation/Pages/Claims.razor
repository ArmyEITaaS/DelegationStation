@page "/claims"
@using DelegationStation.Interfaces;

@attribute [Authorize]

@inject IDeviceTagDBService deviceTagDBService
@inject IConfiguration config


<PageTitle>Claims</PageTitle>

<AuthorizeView>
    <Authorized>
        <h2>Roles</h2>
        @foreach (var group in roles)
        {
            <p>@group</p>
        }
    </Authorized>
    <NotAuthorized>
        <a href="MicrosoftIdentity/Account/SignIn">Log in</a>
    </NotAuthorized>
</AuthorizeView>




@code {
    [CascadingParameter]
    public Task<AuthenticationState>? AuthState { get; set; }
    private AuthenticationState? authState;
    private List<string> roles = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        if (AuthState != null)
        {
            authState = await AuthState;
        }
        UpdateClaims();
    }

    private void UpdateClaims()
    {
        if (authState == null)
        {
            return;
        }

        roles = new List<string>();
        foreach (var c in authState.User.Claims.Where(c => c.Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/role" || c.Type == "roles"))
        {
            roles.Add(c.Value);
        }
    }
}
